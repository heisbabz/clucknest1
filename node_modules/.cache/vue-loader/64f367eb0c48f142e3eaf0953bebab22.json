{"remainingRequest":"/Users/babz/Desktop/clucknest/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/babz/Desktop/clucknest/src/views/Login.vue?vue&type=script&scoped=true&lang=js&","dependencies":[{"path":"/Users/babz/Desktop/clucknest/src/views/Login.vue","mtime":1598282070981},{"path":"/Users/babz/Desktop/clucknest/node_modules/cache-loader/dist/cjs.js","mtime":1598282064308},{"path":"/Users/babz/Desktop/clucknest/node_modules/babel-loader/lib/index.js","mtime":1598282064223},{"path":"/Users/babz/Desktop/clucknest/node_modules/cache-loader/dist/cjs.js","mtime":1598282064308},{"path":"/Users/babz/Desktop/clucknest/node_modules/vue-loader/lib/index.js","mtime":1598282070198}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBOYXZiYXIgZnJvbSAnQC9jb21wb25lbnRzL05hdmJhci52dWUnCmltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZScKaW1wb3J0ICdmaXJlYmFzZS9maXJlc3RvcmUnCmltcG9ydCBWdWVUb2FzdHIgZnJvbSAidnVlLXRvYXN0ciIKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xvZ2luJywKICBjb21wb25lbnRzOiB7CiAgICBOYXZiYXIsCiAgICBWdWVUb2FzdHIKICB9LAogIGRhdGEoKXsKICAgIHJldHVybnsKICAgICAgdXNlcnM6IHsKICAgICAgICBlbWFpbDogbnVsbCwKICAgICAgICBwYXNzd29yZDogbnVsbAogICAgICB9LAogICAgICBmZWVkYmFjazogbnVsbAogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgbG9naW5TdWJtaXQoKXsKICAgICAgaWYodGhpcy51c2Vycy5lbWFpbCAmJiB0aGlzLnVzZXJzLnBhc3N3b3JkKXsKICAgICAgICBmaXJlYmFzZS5hdXRoKCkuc2lnbkluV2l0aEVtYWlsQW5kUGFzc3dvcmQodGhpcy51c2Vycy5lbWFpbCwgdGhpcy51c2Vycy5wYXNzd29yZCkKICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7bmFtZTogJ01haW4nLCBwYXJhbXM6IHtuYW1lOiB0aGlzLm5hbWV9fSkKICAgICAgICB9KS5jYXRjaChlcnIgPT4gewogICAgICAgICAgdGhpcy4kdG9hc3RyLmUoZXJyLm1lc3NhZ2UpOwogICAgICAgIH0pCiAgICAgICAgdGhpcy5mZWVkYmFjayA9IG51bGwKICAgICAgfWVsc2UgewogICAgICAgIHRoaXMuJHRvYXN0ci5lKCJQbGVhc2UgZmlsbCBpbiB0aGUgZW1wdHkgZmllbGRzIikKICAgICAgfQogICAgfQogIH0KfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <Navbar />\n    <div class=\"login container shadow mt-5 p-4\">\n      <form class=\"mt-2\" @submit.prevent=\"loginSubmit\">\n        <h3 class=\"a\">LOGIN</h3>\n        <div class=\"form-group pt-3\">\n          <label for=\"loginEmail\">Email address</label>\n          <input type=\"email\" class=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" v-model=\"users.email\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"loginPassword\">Password</label>\n          <input type=\"password\" class=\"form-control\" placeholder=\"Password\" v-model=\"users.password\">\n        </div>\n        <div class=\"form-check\">\n          <input type=\"checkbox\" class=\"form-check-input\" id=\"loginCheck\">\n          <label class=\"form-check-label\" for=\"loginCheck\">Keep me signed in</label>\n        </div>\n        <vue-toastr ref=\"toastr\"></vue-toastr>\n        <button type=\"submit\" class=\"btn btn-primary mt-4 lb shadow\">Submit</button>\n        <div class=\"mt-1\"><span>Not yet registered? <router-link to=\"/register\">Register</router-link> now</span></div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script scoped>\nimport Navbar from '@/components/Navbar.vue'\nimport firebase from 'firebase'\nimport 'firebase/firestore'\nimport VueToastr from \"vue-toastr\"\n\n\nexport default {\n  name: 'Login',\n  components: {\n    Navbar,\n    VueToastr\n  },\n  data(){\n    return{\n      users: {\n        email: null,\n        password: null\n      },\n      feedback: null\n    }\n  },\n  methods: {\n    loginSubmit(){\n      if(this.users.email && this.users.password){\n        firebase.auth().signInWithEmailAndPassword(this.users.email, this.users.password)\n        .then(() => {\n          this.$router.push({name: 'Main', params: {name: this.name}})\n        }).catch(err => {\n          this.$toastr.e(err.message);\n        })\n        this.feedback = null\n      }else {\n        this.$toastr.e(\"Please fill in the empty fields\")\n      }\n    }\n  }\n}\n</script>>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.login {\n  max-width: 500px;\n  border-radius: 10px;\n  color: #CD853F;\n}\na {\n  justify-content: center;\n}\n.lb {\n  background-color: #CD853F;\n  border: #CD853F;\n  color: #fff;\n}\n.lb:hover {\n  background-color: #fff;\n  color: #CD853F;\n  border: 1px solid #CD853F;\n}\ninput:focus {\n  -webkit-tap-highlight-color: #CD853F;\n}\n</style>"]}]}